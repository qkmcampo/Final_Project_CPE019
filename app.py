# -*- coding: utf-8 -*-
"""CAT and DOG

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1amarSh41un7aHCXgbH_w09qvdhyexuSs
"""

!pip install streamlit ngrok tensorflow pillow

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# # -- Streamlit App Code (paste your full script below) --
# import streamlit as st
# import numpy as np
# from tensorflow.keras.models import load_model
# from tensorflow.keras.preprocessing import image
# from PIL import Image
# 
# st.set_page_config(page_title="Cat vs Dog Classifier", layout="centered")
# MODEL_PATH = "CAT_DOG_model.h5"
# IMG_SIZE = (150, 150)
# CLASS_NAMES = ['Cat', 'Dog']
# 
# @st.cache_resource
# def load_local_model():
#     model = load_model(MODEL_PATH)
#     return model
# 
# model = load_local_model()
# 
# st.title("üê±üê∂ Cat vs Dog Classifier")
# st.markdown("Upload an image to determine whether it's a **cat** or a **dog**.")
# 
# uploaded_file = st.file_uploader("üì§ Upload an image", type=["jpg", "jpeg", "png"])
# 
# if uploaded_file is not None:
#     img = Image.open(uploaded_file).convert('RGB')
#     st.image(img, caption="Uploaded Image", use_column_width=False, width=300)
# 
#     img_resized = img.resize(IMG_SIZE)
#     img_array = image.img_to_array(img_resized) / 255.0
#     img_array = np.expand_dims(img_array, axis=0)
# 
#     with st.spinner("üîç Classifying..."):
#         prediction = model.predict(img_array)[0]
#         predicted_class = CLASS_NAMES[int(round(prediction[0]))]
#         confidence = prediction[0] * 100 if predicted_class == 'Dog' else (1 - prediction[0]) * 100
# 
#     st.success(f"üéØ **Prediction:** `{predicted_class}`")
#     st.metric("üîí Confidence", f"{confidence:.2f} %")
# 
#

from google.colab import files
uploaded = files.upload()